@using webtest.Models
@{
    ViewBag.Title = "UserOrderSta";
    Layout = "~/Views/Shared/_customLayout.cshtml";
}

@if (Session["Admin"] != null)
{
    bool admin = Convert.ToBoolean(Session["Admin"]);
    if (admin)
    {
        <head>
            <link href="~/Content/Admin.css" rel="stylesheet" />
        </head>

        <div id="container">

            <div id="container">

                <div class="sidenav">
                    <a href="@Url.Action("ProductList", "Admin")">Products</a>
                    <a href="@Url.Action("UserList", "Admin")">User accounts</a>
                    @*<a href="@Url.Action("DailySale", "Admin") ">Statistics</a>*@
                    <div class="submenu active">
                        <a class="subMenubtn">
                            Statistics
                            <i class="fa fa-caret-down"></i>
                        </a>
                        <div class="submenu-content">

                            @Html.ActionLink(
"Daily Sale",                                                  // linkText
"DailySale",                                    // actionName
"Admin"                                                   // controllerName

)

                            @Html.ActionLink(
"Catagory statistics",                                                  // linkText
"CatagorieStatistics",                                    // actionName
"Admin"                                                   // controllerName

)

                            @Html.ActionLink(
"User/Order Statistics",                                                  // linkText
"UserORderSta",                                    // actionName
"Admin"                                                   // controllerName

)


                        </div>
                    </div>
                </div>
                <div id="productBox">
                    @{
                        var UserOrderSta = ViewBag.data;
                    }
                    <h2>User/Order Statistics</h2>

                    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.js"></script>


                    <div class="container">
                        <canvas id="UserOrderSta"></canvas>
                    </div>
                </div>
                <script>
    let UserOrderSta = document.getElementById('UserOrderSta').getContext('2d');

    //Global Options
    Chart.defaults.global.defaultFontFamily = 'lato';
    Chart.defaults.global.defaultFontSize = 18;
    Chart.defaults.global.defaultFontColor = '#777';

    let UserOrderStaChart = new Chart(UserOrderSta, {
        type: 'doughnut',
        data: {
            labels: ["Unregisterd", "Registerd"],
            datasets: [{
                lable: 'Payed on Website',
                data: [@UserOrderSta[0], @UserOrderSta[1] ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)'
                ],
                borderColor: '#777',
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'User/order statistics show the percentage of total paid money by registered and unregistered users ',
                fontSize: 15
            },
            legend: {
                position: 'right',
                labels: {
                    fontColor: '#000'
                }

            },
            layout: {
                padding: {
                    left: 50,
                    right: 0,
                    bottom:0,
                }
            },
            tooltips: {
                callbacks: {
                    label: function (tooltipItem, data) {
                        var dataset = data.datasets[tooltipItem.datasetIndex];
                        var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                            return previousValue + currentValue;
                        });
                        var currentValue = dataset.data[tooltipItem.index];
                        var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                        return percentage + "%";
                    }
                }
            }
            //scales: {
            //    yAxes: [{
            //        ticks: {
            //            beginAtZero: true
            //        }
            //    }]
            //}
        }
    });

                </script>
            </div>
        </div>
    }

    else
    {
        Response.Redirect("/Home/Index");
    }
}
else
{
    Response.Redirect("/Login");
}
