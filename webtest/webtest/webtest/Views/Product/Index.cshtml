@model webtest.Models.Book
@using webtest.Models;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_customLayout.cshtml";

}

<head>
    <link href="~/Content/ProductPage.css" rel="stylesheet" />
</head>

@*<div id="navigation">
     //Knop die history.back() doet. Daarmee wordt de gebruiker 1 terug gestuurd! Style="~" is de css, die is in dezelfde lijn aanwezig. 
    <a href="javascript:history.back()" class="fa fa-arrow-circle-left" style="color: black; text-decoration: none; font-size:x-large; position:relative; top:10px; left:10px;  "> </a>
</div>*@

<div id="container">

    @*Box waar de basis info van het boek staat*@
    <div id="result">
        <div id="product">
            <img id="productImg" src="@Model.Image_src" />
            <label id="title">@Model.Name</label>
            <label id="author">By @Model.Author</label>
            <label id="summary">@ViewBag.summary</label>
            <a href="@Url.Action("Index", "Product", new {Title = Model.Name, isbn = Model.ISBN, readMore = ViewBag.Code})" id="readMore">@ViewBag.Text</a>
        </div>
    </div>

    @*Box waar de prijs en knoppen staan*@
    <div id="orderBox">
        <label id="price">€@Model.Price</label>
        <div id="amountBox">
            <a href="@Url.Action("Index", "Product", new {isbn = Model.ISBN, min = true, Title = Model.Name})" id="minButton">-</a>
            @{
                if (Session["User_id"] != null)
                {
                    var _db = new DatabaseEntities1();
                    var item = _db.Carts.Where(x => x.ISBN == Model.ISBN).FirstOrDefault();

                    try
                    {
                        <a id="amount">@item.Quantity</a>
                    }
                    catch
                    {

                    }
                }
                else
                {
                    <a id="amount">@ViewData[Model.ISBN.ToString()]</a>
                }
            }

            <a href="@Url.Action("Index", "Product", new {isbn = Model.ISBN, plus = true, Title = Model.Name, cart = Model.ISBN})" id="plusButton">+</a>
        </div>



        @{
            if (Session["User_id"] != null)
            {
                var dbCart = new DatabaseEntities1();
                var listCart = dbCart.Carts.Select(s => s);
                int User_id_Cart = Convert.ToInt32(Session["User_id"]);

                bool hasCart = listCart.Any(cus => cus.ISBN == Model.ISBN && cus.User_id == User_id_Cart);

                if (hasCart)
                {
                    <a href="@Url.Action("Index", "Product", new {Title = Model.Name, isbn = Model.ISBN, cart = Model.ISBN})" id="btnCart">Remove from cart</a>
                }
                else
                {
                    <a href="@Url.Action("Index", "Product", new {Title = Model.Name, isbn = Model.ISBN, cart = Model.ISBN})" id="btnCart">Add to cart</a>
                }

            }
            else
            {
                if (Session["shoppingCart"] == null)
                {
                    <a href="@Url.Action("Index", "Product", new {Title = Model.Name, isbn = Model.ISBN, cart = Model.ISBN})" id="btnCart">Add to cart</a>
                }
                else
                {
                    List<string> isbns = Session["shoppingCart"].ToString().Split(',').ToList();

                    if (isbns.Contains(Model.ISBN.ToString()))
                    {
                        <a href="@Url.Action("Index", "Product", new { isbn = Model.ISBN, delete = true, Title = Model.Name})" id="btnCart">Remove from cart</a>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", "Product", new {Title = Model.Name, isbn = Model.ISBN, cart = Model.ISBN})" id="btnCart">Add to cart</a>
                    }
                }
            }

        }

        @*FAVORIETEN*@
        @{
            if (Session["User_id"] != null)
            {
                var db = new DatabaseEntities1();
                var list = db.Favorites.Select(s => s);
                double isbnD = Convert.ToDouble(Model.ISBN);
                int User_id = Convert.ToInt32(Session["User_id"]);

                bool has = list.Any(cus => cus.ISBN == isbnD && cus.User_id == User_id);
                //CHECKEN OF ISBN AL IN FAVORIETEN ZIT VAN DE GEBRUIKER.
                if (has)
                {
                    <a href="@Url.Action("Index", new { Title = Model.Name, isbn = Model.ISBN, favo = Model.ISBN}) " id="btnWishList">Remove from favorites list</a>
                }
                else
                {
                    <a href="@Url.Action("Index", new { Title = Model.Name, isbn = Model.ISBN, favo = Model.ISBN}) " id="btnWishList">Add to favorites list</a>
                }
            }

        }
    </div>

    @*More information box*@
    <div id="moreInfo">
        <label id="miTitle">More Information</label>
        @*Label om de Stock te laten zien. Staat nu dus bij de eigenschappen van het boek.*@
        <label id="miLabel"><b>Stock: </b> @Model.Stock</label>
        <label id="miLabel"><b>Publish Date:</b> @Model.Date.ToString("dd-MM-yyyy")</label>
        <label id="miLabel"><b>ISBN:</b> @Model.ISBN</label>
        <label id="miLabel"><b>Author:</b> @Model.Author</label>
        <br />

        <label id="miLabel">
            <b>Rating:</b>
            @switch (Model.Rating)
            {
                case 1:
                    <img id="rating" src="~/Content/Images/Rating1Star.png" />
                    break;
                case 2:
                    <img id="rating" src="~/Content/Images/Rating2Star.png" />
                    break;
                case 3:
                    <img id="rating" src="~/Content/Images/Rating3Star.png" />
                    break;
                case 4:
                    <img id="rating" src="~/Content/Images/Rating4Star.png" />
                    break;
                case 5:
                    <img id="rating" src="~/Content/Images/Rating5Star.png" />
                    break;
            }
        </label>

        <label id="miLabel"><b>Category:</b> @Model.Category</label>
        @Html.Raw(TempData["favo"])
    </div>
</div>