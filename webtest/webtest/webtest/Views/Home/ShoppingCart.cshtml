@*@model webtest.Models.Book*@
@using PagedList;
@using PagedList.Mvc;
@model List<webtest.Models.Book>
@using webtest.Models;

@{
    ViewBag.Title = "ShoppingCart";
    Layout = "~/Views/Shared/_customLayout.cshtml";
}

<head>
    <link href="~/Content/ShoppingCart.css" rel="stylesheet" />
</head>

<div id="container">
    <div id="results">
        <p style="font-weight:bold; text-align:center; color:#ff0000">@ViewBag.Error</p>
        <a id="txtTitle">Shopping Cart</a>
        <img id="stripe" src="~/Content/Images/stripe.png" />

        <!-- SHOW PRODUCTS-->
        <!-- Check of er producten zijn gevonden-->
        @if (Model.Count == 0)
        {
            <a href="@Url.Action("Index", "Home")" id="txtEmpty">Click here to start shopping</a>
        }
        <!-- ForEachLoop door alle producten die zijn opgehaald uit de database.-->
        <!-- Elke product krijgt dezelfde opmaak in <div id="procuct"> ..... </div> -->
        <!-- Alle waardes worden opgehaald uit de database en ingevuld op de juiste plekken -->
        @foreach (var m in Model)
        {
            <!-- De ForEachLoop zorgt ervoor dat alle producten met verschillende waardes en dezelfde opmaak onder elkaar worden geplaatst.-->
            <div id="product">
                <a href="@Url.Action("Index", "Product", new { Title = m.Name, isbn = m.ISBN })">
                    <img id="productImg" src="@m.Image_src" />
                </a>

                @{
                    if (Session["User_id"] != null)
                    {
                        var db = new DatabaseEntities1();
                        var item = db.Carts.Where(x => x.ISBN == m.ISBN).FirstOrDefault();
                        <label id="priceBookTotal">€@(m.Price * item.Quantity)</label>
                    }
                    else
                    {
                        <label id="priceBookTotal">€@(m.Price * Convert.ToInt32(ViewData[m.ISBN.ToString()]))</label>
                    }
                }

                <a href="@Url.Action("Index", "Product", new { Title = m.Name, isbn = m.ISBN }) " id="title">@m.Name</a>
                <label id="author">@m.Author</label> <br />
                <label id="price">€@m.Price</label> <br />
                <label id="price"><b>Stock: </b> @m.Stock</label>

            </div>

            <div id="amountBox">
                <a href="@Url.Action("ShoppingCart", "Home", new { isbn = m.ISBN, min = true })" id="minButton">-</a>
                @{
                    if (Session["User_id"] != null)
                    {
                        var db = new DatabaseEntities1();
                        var item = db.Carts.Where(x => x.ISBN == m.ISBN).FirstOrDefault();
                        <a id="amount">@item.Quantity</a>
                    }
                    else
                    {
                        <a id="amount">@ViewData[m.ISBN.ToString()]</a>
                    }
                }

                <a href="@Url.Action("ShoppingCart", "Home", new { isbn = m.ISBN, plus = true })" id="plusButton">+</a>
            </div>

            <div>
                @{ if (Session["User_id"] != null)
                    {
                        @*FAVORIETEN*@

                        var db = new DatabaseEntities1();
                        var list = db.Favorites.Select(s => s);
                        double isbnD = Convert.ToDouble(m.ISBN);
                        int User_id = Convert.ToInt32(Session["User_id"]);

                        bool has = list.Any(cus => cus.ISBN == isbnD && cus.User_id == User_id);
                        //CHECKEN OF ISBN AL IN FAVORIETEN ZIT VAN DE GEBRUIKER.
                        if (has)
                        {
                            <a href="@Url.Action("ShoppingCart", "Home", new { Title = m.Name, isbn = m.ISBN, favo = m.ISBN }) " class="FavoButton fa fa-star"> Remove from favorites list</a>
                        }
                        else
                        {
                            <a href="@Url.Action("ShoppingCart", "Home", new { Title = m.Name, isbn = m.ISBN, favo = m.ISBN }) " class="FavoButton fa fa-star-o"> Add to favorites list</a>
                        }
                
                        <a href="@Url.Action("ShoppingCart", "Home", new { del = m.ISBN, Title = m.Name, isbn = m.ISBN })" class="fa fa-trash-o deleteButton"> Delete product</a>
                    }
                    else
                    {
                        <a href="@Url.Action("ShoppingCart", "Home", new { isbn = m.ISBN, delete = true, Title = m.Name })" class="fa fa-trash-o deleteButton"> Delete product</a>
                    }

                }
            </div>


            <img id="stripe" src="~/Content/Images/stripe.png" />
        }

    </div>

    <div id="checkout">

        <label id="payment">Payment</label>
        <div id="checkOutBox">
            <div id="totalBox">
                <label id="delivery">Delivery</label> <br />
                <label id="total">Total Price</label>
            </div>
            <div id="priceBox">
                <label id="deliveryPrice">€0</label><br />
                @{
                    if (ViewBag.totalPrice == null)
                    {
                        <label id="totalPrice">€0</label>
                    }
                    else
                    {
                        <label id="totalPrice">€@ViewBag.totalPrice</label>
                    }
                }

            </div>


            @{
                if (Session["User_id"] != null)
                {
                    using (var db = new DatabaseEntities1())
                    {
                        int User_id = Convert.ToInt32(Session["User_id"]);
                        var result = (from cart in db.Carts
                                      from book in db.Books
                                      where cart.ISBN == book.ISBN &&
                                      cart.User_id == User_id
                                      select book).ToList();
                        if (result.Count != 0)
                        {
                            <a href="@Url.Action("Address", "Checkout", new {})" id="btnCheckOut">Checkout</a>
                        }
                    }



                }
                else
                {
                    var cart = (Dictionary<Book, int>)Session["Cart"];
                    if (cart.Count != 0)
                    {
                        <a href="@Url.Action("Index", "Checkout", new {})" id="btnCheckOut">Checkout</a>
                    }
                }

            }
        </div>
    </div>
</div>

