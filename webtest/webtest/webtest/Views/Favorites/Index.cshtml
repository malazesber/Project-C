@model IEnumerable<webtest.Models.Book>
@using webtest.Models
@{
    ViewBag.Title = "Favorites";
    Layout = "~/Views/Shared/_customLayout.cshtml";
}

<head>
    <link href="~/Content/FavoritePage.css" rel="stylesheet" />
</head>

<div id="container">
    <div id="results">
        <div id="txtTitle">Favorites List</div>
        <img id="stripe" src="~/Content/Images/stripe.png" />

        @{var _database = new DatabaseEntities1();
            var count = Model.Count();}

        @if (count == 0)
        {
            <a href="@Url.Action("Index", "Home")" id="txtEmpty">Click here to start shopping</a>
        }

        @foreach (var m in Model)
        {
            <!-- De ForEachLoop zorgt ervoor dat alle producten met verschillende waardes en dezelfde opmaak onder elkaar worden geplaatst.-->
            <div id="product">

                <a href="@Url.Action("Index", "Product", new { isbn = m.ISBN})">
                    <img id="productImg" src="@m.Image_src" />
                </a><br />

                <a href="@Url.Action("Index", "Favorites", new { delete = m.ISBN}) " id="btnWishList">x</a>

                <a href="@Url.Action("Index", "Product", new { isbn = m.ISBN}) " id="title">@m.Name</a><br />
                <label id="author">@m.Author</label><br />

                @{
                    string starsPerc = "";

                    // Selects the rating based on the stars given in reviews
                    try
                    {
                        var rating = (from r in _database.Reviews
                                      where r.ISBN == m.ISBN
                                      select r.Rating).Average();
                        var stars = (rating * 20).ToString();
                        starsPerc = stars + "%";
                    }

                    // When there are no reviews yet
                    catch
                    {
                        starsPerc = "0%";
                    }
                }

                <label id="miLabel" class="star-ratings-sprite">
                    <span style="width:@starsPerc" class="star-ratings-sprite-rating"></span>
                </label>  <br />

                <label id="price">€@m.Price</label><br />

                @*
                    Check whether the stock of the book is 0. If it is, the shopping cart buttons will be replaced by an error message.
                *@
                @if (m.Stock != 0)
                {
                    if (Session["User_id"] != null)
                    {
                        var dbCart = new DatabaseEntities1();
                        var listCart = dbCart.Carts.Select(s => s);
                        double isbnDCart = Convert.ToDouble(m.ISBN);
                        int User_id_Cart = Convert.ToInt32(Session["User_id"]);

                        bool hasCart = listCart.Any(cus => cus.ISBN == isbnDCart && cus.User_id == User_id_Cart);

                        if (hasCart)
                        {
                            <a href="@Url.Action("Index", "Favorites", new {cart = m.ISBN})" id="btnCart">Remove From Cart</a>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", "Favorites", new {cart = m.ISBN})" id="btnCart">Add to Cart</a>
                        }
                    }
                }
                else
                {
                    <small style="font-weight:bold; text-align:center; color:#ff0000" id="noStock">The stock of this item has depleted.</small>
                }
            </div>
        }
    </div>
</div>
